/**
 * CarPool API
 * API documentation for CarPool application
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RideOfferRequest model module.
 * @module model/RideOfferRequest
 * @version 1.0
 */
class RideOfferRequest {
    /**
     * Constructs a new <code>RideOfferRequest</code>.
     * @alias module:model/RideOfferRequest
     * @param startLocation {String} 
     * @param endLocation {String} 
     * @param departureTime {Date} 
     * @param availableSeats {Number} 
     */
    constructor(startLocation, endLocation, departureTime, availableSeats) { 
        
        RideOfferRequest.initialize(this, startLocation, endLocation, departureTime, availableSeats);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startLocation, endLocation, departureTime, availableSeats) { 
        obj['startLocation'] = startLocation;
        obj['endLocation'] = endLocation;
        obj['departureTime'] = departureTime;
        obj['availableSeats'] = availableSeats;
    }

    /**
     * Constructs a <code>RideOfferRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RideOfferRequest} obj Optional instance to populate.
     * @return {module:model/RideOfferRequest} The populated <code>RideOfferRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RideOfferRequest();

            if (data.hasOwnProperty('startLocation')) {
                obj['startLocation'] = ApiClient.convertToType(data['startLocation'], 'String');
            }
            if (data.hasOwnProperty('endLocation')) {
                obj['endLocation'] = ApiClient.convertToType(data['endLocation'], 'String');
            }
            if (data.hasOwnProperty('departureTime')) {
                obj['departureTime'] = ApiClient.convertToType(data['departureTime'], 'Date');
            }
            if (data.hasOwnProperty('availableSeats')) {
                obj['availableSeats'] = ApiClient.convertToType(data['availableSeats'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RideOfferRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RideOfferRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RideOfferRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['startLocation'] && !(typeof data['startLocation'] === 'string' || data['startLocation'] instanceof String)) {
            throw new Error("Expected the field `startLocation` to be a primitive type in the JSON string but got " + data['startLocation']);
        }
        // ensure the json data is a string
        if (data['endLocation'] && !(typeof data['endLocation'] === 'string' || data['endLocation'] instanceof String)) {
            throw new Error("Expected the field `endLocation` to be a primitive type in the JSON string but got " + data['endLocation']);
        }

        return true;
    }


}

RideOfferRequest.RequiredProperties = ["startLocation", "endLocation", "departureTime", "availableSeats"];

/**
 * @member {String} startLocation
 */
RideOfferRequest.prototype['startLocation'] = undefined;

/**
 * @member {String} endLocation
 */
RideOfferRequest.prototype['endLocation'] = undefined;

/**
 * @member {Date} departureTime
 */
RideOfferRequest.prototype['departureTime'] = undefined;

/**
 * @member {Number} availableSeats
 */
RideOfferRequest.prototype['availableSeats'] = undefined;






export default RideOfferRequest;

