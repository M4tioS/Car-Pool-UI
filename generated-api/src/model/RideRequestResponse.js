/**
 * CarPool API
 * API documentation for CarPool application
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RideRequestResponse model module.
 * @module model/RideRequestResponse
 * @version 1.0
 */
class RideRequestResponse {
    /**
     * Constructs a new <code>RideRequestResponse</code>.
     * @alias module:model/RideRequestResponse
     */
    constructor() { 
        
        RideRequestResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RideRequestResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RideRequestResponse} obj Optional instance to populate.
     * @return {module:model/RideRequestResponse} The populated <code>RideRequestResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RideRequestResponse();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('requestStatus')) {
                obj['requestStatus'] = ApiClient.convertToType(data['requestStatus'], 'String');
            }
            if (data.hasOwnProperty('rideOfferId')) {
                obj['rideOfferId'] = ApiClient.convertToType(data['rideOfferId'], 'Number');
            }
            if (data.hasOwnProperty('requesterEmail')) {
                obj['requesterEmail'] = ApiClient.convertToType(data['requesterEmail'], 'String');
            }
            if (data.hasOwnProperty('requestDate')) {
                obj['requestDate'] = ApiClient.convertToType(data['requestDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RideRequestResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RideRequestResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['requestStatus'] && !(typeof data['requestStatus'] === 'string' || data['requestStatus'] instanceof String)) {
            throw new Error("Expected the field `requestStatus` to be a primitive type in the JSON string but got " + data['requestStatus']);
        }
        // ensure the json data is a string
        if (data['requesterEmail'] && !(typeof data['requesterEmail'] === 'string' || data['requesterEmail'] instanceof String)) {
            throw new Error("Expected the field `requesterEmail` to be a primitive type in the JSON string but got " + data['requesterEmail']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
RideRequestResponse.prototype['id'] = undefined;

/**
 * @member {String} requestStatus
 */
RideRequestResponse.prototype['requestStatus'] = undefined;

/**
 * @member {Number} rideOfferId
 */
RideRequestResponse.prototype['rideOfferId'] = undefined;

/**
 * @member {String} requesterEmail
 */
RideRequestResponse.prototype['requesterEmail'] = undefined;

/**
 * @member {Date} requestDate
 */
RideRequestResponse.prototype['requestDate'] = undefined;






export default RideRequestResponse;

